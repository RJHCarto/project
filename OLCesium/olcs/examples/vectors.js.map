{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/vectors.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAA0C;AAC1C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1IA;AAAA;AACA;AACA;AACA;AACA;AACA;AACsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA,iFAAoC,sBAAsB;AAC1D;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,mFAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA,2EAA6B,uBAAuB;AACpD,CAAC;;AAED;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,2CAA2C,QAAQ;AACnD,CAAC;;;AAGD,2EAA2B,qBAAqB;AAChD;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA","file":"vectors.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"vectors\": 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([14,\"commons\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module examples.vectors\n */\nconst exports = {};\nimport OLCesium from 'olcs/OLCesium.js';\nimport olView from 'ol/View.js';\nimport {defaults as olControlDefaults} from 'ol/control.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olMap from 'ol/Map.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olFormatTopoJSON from 'ol/format/TopoJSON.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olFormatIGC from 'ol/format/IGC.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDragAndDrop from 'ol/interaction/DragAndDrop.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olProj from 'ol/proj.js';\nimport olcsCore from 'olcs/core.js';\n\n\nconst iconFeature = new olFeature({\n  geometry: new olGeomPoint([700000, 200000, 100000])\n});\n\nconst textFeature = new olFeature({\n  geometry: new olGeomPoint([1000000, 3000000, 500000])\n});\n\nconst cervinFeature = new olFeature({\n  geometry: new olGeomPoint([852541, 5776649])\n});\ncervinFeature.getGeometry().set('altitudeMode', 'clampToGround');\n\n\nconst modelFeatures = [-1, -1 / 2, 0, 1 / 2, 1, 3 / 2].map(\n    factor => new olFeature({\n      geometry: new olGeomPoint([852641, 5776749, 4500]),\n      'rotation': factor * Math.PI\n    })\n);\n\n\nconst iconStyle = new olStyleStyle({\n  image: new olStyleIcon(/** @type {olx.style.IconOptions} */ ({\n    anchor: [0.5, 46],\n    anchorXUnits: 'fraction',\n    anchorYUnits: 'pixels',\n    opacity: 0.75,\n    src: 'data/icon.png'\n  })),\n  text: new olStyleText({\n    text: 'Some text',\n    textAlign: 'center',\n    textBaseline: 'middle',\n    stroke: new olStyleStroke({\n      color: 'magenta',\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 155, 0.3)'\n    })\n  })\n});\n\nconst textStyle = [new olStyleStyle({\n  text: new olStyleText({\n    text: 'Only text',\n    textAlign: 'center',\n    textBaseline: 'middle',\n    stroke: new olStyleStroke({\n      color: 'red',\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 155, 0.3)'\n    })\n  })\n}), new olStyleStyle({\n  geometry: new olGeomCircle([1000000, 3000000, 10000], 2e6),\n  stroke: new olStyleStroke({\n    color: 'blue',\n    width: 2\n  }),\n  fill: new olStyleFill({\n    color: 'rgba(0, 0, 255, 0.2)'\n  })\n})];\n\niconFeature.setStyle(iconStyle);\n\ntextFeature.setStyle(textStyle);\n\ncervinFeature.setStyle(iconStyle);\nlet iCase = 0;\nmodelFeatures.forEach((feature) => {\n  ++iCase;\n  const modelStyle = new olStyleStyle({\n    image: new olStyleIcon(/** @type {olx.style.IconOptions} */ ({\n      anchor: [0.5, 46],\n      anchorXUnits: 'fraction',\n      anchorYUnits: 'pixels',\n      opacity: 0.75,\n      src: 'data/icon.png'\n    }))\n  });\n  const olcsModelFunction = () => {\n    const coordinates = feature.getGeometry().getCoordinates();\n    const center = olProj.transform(coordinates, 'EPSG:3857', 'EPSG:4326');\n    const rotation = /** @type {number} */ (feature.get('rotation'));\n    return {\n      cesiumOptions: {\n        url: 'data/arrow5.glb',\n        modelMatrix: olcsCore.createMatrixAtCoordinates(center, rotation),\n        heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\n        minimumPixelSize: 64\n      }\n    };\n  };\n  let host = feature;\n  switch (iCase % 3) {\n    case 0:\n      host = feature.getGeometry();\n      break;\n    case 1:\n      modelStyle.setGeometry(feature.getGeometry().clone());\n      host = modelStyle.getGeometry();\n      break;\n    default:\n      host = feature;\n  }\n  host.set('olcs_model', olcsModelFunction);\n  feature.setStyle(modelStyle);\n});\n\n\nconst image = new olStyleCircle({\n  radius: 5,\n  fill: null,\n  stroke: new olStyleStroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': [new olStyleStyle({\n    image\n  })],\n  'LineString': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'green',\n      lineDash: [12],\n      width: 10\n    })\n  })],\n  'MultiLineString': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'green',\n      width: 10\n    })\n  })],\n  'MultiPoint': [new olStyleStyle({\n    image,\n    text: new olStyleText({\n      text: 'MP',\n      stroke: new olStyleStroke({\n        color: 'purple'\n      })\n    })\n  })],\n  'MultiPolygon': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  })],\n  'Polygon': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  })],\n  'GeometryCollection': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new olStyleFill({\n      color: 'magenta'\n    }),\n    image: new olStyleCircle({\n      radius: 10, // pixels\n      fill: null,\n      stroke: new olStyleStroke({\n        color: 'magenta'\n      })\n    })\n  })],\n  'Circle': [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new olStyleFill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })]\n};\n\nconst styleFunction = function(feature, resolution) {\n  const geo = feature.getGeometry();\n  // always assign a style to prevent feature skipping\n  return geo ? styles[geo.getType()] : styles['Point'];\n};\n\nconst vectorSource = new olSourceVector({\n  format: new olFormatGeoJSON(),\n  url: 'data/geojson/vector_data.geojson'\n});\n\nconst theCircle = new olFeature(new olGeomCircle([5e6, 7e6, 5e5], 1e6));\n\n// Add a Cesium rectangle, via setting the property olcs.polygon_kind\nconst cartographicRectangleStyle = new olStyleStyle({\n  fill: new olStyleFill({\n    color: 'rgba(255, 69, 0, 0.7)'\n  }),\n  stroke: new olStyleStroke({\n    color: 'rgba(255, 69, 0, 0.9)',\n    width: 1\n  })\n});\nconst cartographicRectangleGeometry = new olGeomPolygon([[[-5e6, 11e6],\n  [4e6, 11e6], [4e6, 10.5e6], [-5e6, 10.5e6], [-5e6, 11e6]]]);\ncartographicRectangleGeometry.set('olcs.polygon_kind', 'rectangle');\nconst cartographicRectangle = new olFeature({\n  geometry: cartographicRectangleGeometry\n});\ncartographicRectangle.setStyle(cartographicRectangleStyle);\n\n// Add two Cesium rectangles with height and the property olcs.polygon_kind\nconst cartographicRectangleGeometry2 = new olGeomMultiPolygon([\n  [[\n    [-5e6, 12e6, 0], [4e6, 12e6, 0], [4e6, 11.5e6, 0], [-5e6, 11.5e6, 0],\n    [-5e6, 12e6, 0]\n  ]],\n  [[\n    [-5e6, 11.5e6, 1e6], [4e6, 11.5e6, 1e6], [4e6, 11e6, 1e6],\n    [-5e6, 11e6, 1e6], [-5e6, 11.5e6, 1e6]\n  ]]\n]);\ncartographicRectangleGeometry2.set('olcs.polygon_kind', 'rectangle');\nconst cartographicRectangle2 = new olFeature({\n  geometry: cartographicRectangleGeometry2\n});\ncartographicRectangle2.setStyle(cartographicRectangleStyle);\n\nconst vectorLayer = new olLayerVector({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst vectorSource2 = new olSourceVector({\n  features: [iconFeature, textFeature, cervinFeature, ...modelFeatures, cartographicRectangle,\n    cartographicRectangle2]\n});\nconst vectorLayer2 = new olLayerVector({\n  source: vectorSource2\n});\n\nconst dragAndDropInteraction = new olInteractionDragAndDrop({\n  formatConstructors: [\n    olFormatGPX,\n    olFormatGeoJSON,\n    olFormatIGC,\n    olFormatKML,\n    olFormatTopoJSON\n  ]\n});\n\nconst map = new olMap({\n  interactions: olInteraction.defaults().extend([dragAndDropInteraction]),\n  layers: [\n    new olLayerTile({\n      source: new olSourceOSM()\n    }),\n    vectorLayer,\n    vectorLayer2\n  ],\n  target: 'map2d',\n  controls: olControlDefaults({\n    attributionOptions: /** @type {olx.control.AttributionOptions} */ ({\n      collapsible: false\n    })\n  }),\n  view: new olView({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndragAndDropInteraction.on('addfeatures', (event) => {\n  const vectorSource = new olSourceVector({\n    features: event.features,\n    projection: event.projection\n  });\n  map.getLayers().push(new olLayerVector({\n    source: vectorSource,\n    style: styleFunction\n  }));\n  const view = map.getView();\n  view.fitExtent(\n      vectorSource.getExtent(), /** @type {ol.Size} */ (map.getSize()));\n});\n\n\nconst ol3d = new OLCesium({map, target: 'map3d'});\nconst scene = ol3d.getCesiumScene();\nconst terrainProvider = new Cesium.CesiumTerrainProvider({\n  url: '//assets.agi.com/stk-terrain/world'\n});\nscene.terrainProvider = terrainProvider;\nol3d.setEnabled(true);\n\nconst csLabels = new Cesium.LabelCollection();\ncsLabels.add({\n  position: Cesium.Cartesian3.fromRadians(20, 20, 0),\n  text: 'Pre-existing primitive'\n});\nscene.primitives.add(csLabels);\n\n// Adding a feature after the layer has been synchronized.\nvectorSource.addFeature(theCircle);\n\nlet hasTheVectorLayer = true;\nwindow['addOrRemoveOneVectorLayer'] = function() {\n  if (hasTheVectorLayer) {\n    map.getLayers().remove(vectorLayer);\n  } else {\n    map.getLayers().insertAt(1, vectorLayer);\n  }\n  hasTheVectorLayer = !hasTheVectorLayer;\n};\n\nwindow['addOrRemoveOneFeature'] = function() {\n  const found = vectorSource2.getFeatures().indexOf(iconFeature);\n  if (found === -1) {\n    vectorSource2.addFeature(iconFeature);\n  } else {\n    vectorSource2.removeFeature(iconFeature);\n  }\n};\n\nlet oldStyle = new olStyleStyle({\n  stroke: new olStyleStroke({\n    color: 'blue',\n    width: 2\n  }),\n  fill: new olStyleFill({\n    color: 'green'\n  })\n});\n\nwindow['toggleStyle'] = function() {\n  const swap = theCircle.getStyle();\n  theCircle.setStyle(oldStyle);\n  oldStyle = swap;\n};\n\nwindow['toggleClampToGround'] = function() {\n  let altitudeMode;\n  if (!vectorLayer.get('altitudeMode')) {\n    altitudeMode = 'clampToGround';\n  }\n  vectorLayer.set('altitudeMode', altitudeMode);\n  vectorLayer2.set('altitudeMode', altitudeMode);\n  map.removeLayer(vectorLayer);\n  map.removeLayer(vectorLayer2);\n  map.addLayer(vectorLayer);\n  map.addLayer(vectorLayer2);\n};\n\nwindow['setTargetFrameRate'] = function() {\n  let fps;\n  const fpsEl = document.querySelector('#framerate');\n  if (fpsEl) {\n    fps = Number(fpsEl.value);\n    ol3d.setTargetFrameRate(fps);\n  }\n};\n\nwindow['ol3d'] = ol3d;\nwindow['scene'] = scene;\ndocument.getElementById('enable').addEventListener('click', () => ol3d.setEnabled(!ol3d.getEnabled()));\n\nol3d.enableAutoRenderLoop();\n\n\nexport default exports;\n"],"sourceRoot":""}