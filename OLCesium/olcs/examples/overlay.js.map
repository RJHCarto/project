{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./examples/overlay.js"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAA0C;AAC1C;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC1IA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;AACtC;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,KAAK;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA,yEAAyE,KAAK;AAC9E,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,+EAAmC,QAAQ;AAC3C;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA","file":"overlay.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"overlay\": 0\n \t};\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".js\"\n \t}\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([7,\"commons\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/**\n * @module examples.overlay\n */\nconst exports = {};\nimport OLCesium from 'olcs/OLCesium.js';\nimport olMap from 'ol/Map.js';\nimport olSourceOSM from 'ol/source/OSM.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olProj from 'ol/proj.js';\nimport olView from 'ol/View.js';\nimport {defaults as olControlDefaults} from 'ol/control.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olCoordinate from 'ol/coordinate.js';\n/* global $ */\n\nconst source = new olSourceOSM();\n\n\nconst ol2d = new olMap({\n  layers: [\n    new olLayerTile({\n      source\n    })\n  ],\n  controls: olControlDefaults({\n    attributionOptions: /** @type {olx.control.AttributionOptions} */ ({\n      collapsible: false\n    })\n  }),\n  target: 'map',\n  view: new olView({\n    center: olProj.transform([-112.2, 36.06], 'EPSG:4326', 'EPSG:3857'),\n    zoom: 11\n  })\n});\nconst ol3d = new OLCesium({\n  map: ol2d,\n  target: 'map3d'\n});\nconst scene = ol3d.getCesiumScene();\nconst terrainProvider = new Cesium.CesiumTerrainProvider({\n  url: '//assets.agi.com/stk-terrain/world'\n});\nscene.terrainProvider = terrainProvider;\n\nclass OverlayHandler {\n  constructor(ol2d, ol3d, scene) {\n    this.ol2d = ol2d;\n    this.ol3d = ol3d;\n    this.scene = scene;\n\n    this.staticOverlay = new olOverlay({\n      element: document.getElementById('popup')\n    });\n\n    this.staticBootstrapPopup = new olOverlay({\n      element: document.getElementById('popup-bootstrap')\n    });\n    this.ol2d.addOverlay(this.staticOverlay);\n    this.ol2d.addOverlay(this.staticBootstrapPopup);\n\n    this.options = {\n      boostrap: false,\n      add: true\n    };\n\n    this.ol2d.on('click', this.onClickHandlerOL.bind(this));\n    const eventHandler = new Cesium.ScreenSpaceEventHandler(scene.canvas);\n    eventHandler.setInputAction(this.onClickHandlerCS.bind(this), Cesium.ScreenSpaceEventType['LEFT_CLICK']);\n\n    const clickForm = document.getElementById('click-action-form');\n    clickForm.onchange = function(event) {\n      const checked = $('input[name=\"click-action\"]:checked').val();\n      this.options.add = checked === 'add';\n    }.bind(this);\n\n    const typeForm = document.getElementById('overlay-type-form');\n    typeForm.onchange = function(event) {\n      const checked = $('input[name=\"overlay-type\"]:checked').val();\n      this.options.boostrap = checked === 'popover';\n    }.bind(this);\n  }\n\n  onClickHandlerOL(event) {\n    const coordinates = event.coordinate;\n    const hdms = olCoordinate.toStringHDMS(\n        olProj.transform(coordinates, 'EPSG:3857', 'EPSG:4326')\n    );\n    const overlay = this.getOverlay();\n    overlay.setPosition(coordinates);\n    this.setOverlayContent(overlay, hdms);\n  }\n\n  onClickHandlerCS(event) {\n    if (event.position.x === 0 && event.position.y === 0) {\n      return;\n    }\n\n    const ray = this.scene.camera.getPickRay(event.position);\n    const cartesian = this.scene.globe.pick(ray, scene);\n    if (!cartesian) {\n      return;\n    }\n    const cartographic = scene.globe.ellipsoid.cartesianToCartographic(cartesian);\n    let coords = [Cesium.Math.toDegrees(cartographic.longitude), Cesium.Math.toDegrees(cartographic.latitude)];\n\n    const height = scene.globe.getHeight(cartographic);\n    if (height) {\n      coords = coords.concat([height]);\n    }\n\n    const transformedCoords = olProj.transform(coords, olProj.get('EPSG:4326'), 'EPSG:3857');\n    const hdms = olCoordinate.toStringHDMS(coords);\n    const overlay = this.getOverlay();\n    overlay.setPosition(transformedCoords);\n    this.setOverlayContent(overlay, hdms);\n  }\n\n  getOverlay() {\n    if (this.options.add) {\n      return this.addOverlay();\n    }\n\n    if (this.options.boostrap) {\n      return this.staticBootstrapPopup;\n    }\n    return this.staticOverlay;\n  }\n\n  setOverlayContent(overlay, hdms) {\n    const element = overlay.getElement();\n    if (this.options.boostrap) {\n      const div = document.createElement('div');\n      div.onclick = this.onCloseClick.bind(this, overlay, this.options.add);\n      div.innerHTML = `<p>The location you clicked was:</p><code>${hdms}</code>`;\n      $(element).popover('destroy');\n      $(element).popover({\n        'placement': 'top',\n        'animation': false,\n        'html': true,\n        'content': div\n      });\n      $(element).popover('show');\n    } else {\n      element.childNodes.forEach((child) => {\n        if (child.id === 'popup-content') {\n          child.innerHTML = `<p>The location you clicked was:</p><code>${hdms}</code>`;\n        } else if (child.id === 'popup-closer') {\n          child.onclick = this.onCloseClick.bind(this, overlay, this.options.add);\n        }\n      });\n    }\n  }\n\n  onCloseClick(overlay, add) {\n    if (add) {\n      this.ol2d.removeOverlay(overlay);\n    } else {\n      overlay.setPosition(undefined);\n    }\n  }\n\n  addOverlay() {\n    let element;\n    if (this.options.boostrap) {\n      element = document.getElementById('popup-bootstrap').cloneNode(true);\n    } else {\n      element = document.getElementById('popup').cloneNode(true);\n    }\n    const overlay = new olOverlay({element});\n    this.ol2d.addOverlay(overlay);\n    return overlay;\n  }\n}\n\nnew OverlayHandler(ol2d, ol3d, scene);\n\ndocument.getElementById('enable').addEventListener('click', () => ol3d.setEnabled(!ol3d.getEnabled()));\n\nexport default exports;\n"],"sourceRoot":""}